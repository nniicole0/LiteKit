{  Project : MotorControl.spin  Platform: Parallax Project USB Board            Lite Kit  Revision: 1.1  Author  : Nicole Ooi  Date    : 29/11/21  Log     :            Date      : Desc}CON  _clkmode = xtal1 + pll16x                           'Standard clock mode * crystal frequency = 80 MHz  _xinfreq = 5_000_000  ' Creating a Pause()  _ConClickFreq = ((_clkmode - xtal1) >> 6) * _xinfreq  _MS_001 = _ConClickFreq / 1_000  ' Declare Pins for Motors  motor1 = 10  motor2 = 11  motor3 = 12  motor4 = 13  ' Declare Zero Speed for Motors  motor1Zero = 1250  motor2Zero = 1250  motor3Zero = 1225  motor4Zero = 1225VAR ' Global Variable  ' Declare CogID  long cogIDNum  long motorCoreStack[64]OBJ ' Objects  Motors  : "Servo8Fast_vZ2.spin"  Term    : "FullDuplexSerial.spin"  'UART communicationPUB Start   Stop   cogIDNum := cognew(Init, @motorCoreStack)   Pause(2000)   returnPUB Stop  if cogIDNum    cogstop(cogIDNum~)PUB motorMove(motionType)    case motionType      1:        Forward(125)      2:        Reverse(350)      3:        TurnLeft(50)      4:        TurnRight(50)      5:        StopAllMotorsPUB Init  Motors.Init  Motors.AddSlowPin(motor1)  Motors.AddSlowPin(motor2)  Motors.AddSlowPin(motor3)  Motors.AddSlowPin(motor4)  Motors.Start  Pause(100)PUB Set ( motor , speed )  case motor    motor1:      speed += motor1Zero          'let the speed to the motor be the input speed parameter plus the respective motor's zero value      Motors.Set(motor1, speed)    motor2:      speed += motor2Zero      Motors.Set(motor2, speed)    motor3:      speed += motor3Zero      Motors.Set(motor3, speed)    motor4:      speed += motor4Zero      Motors.Set(motor4, speed)PUB StopAllMotors  'Stop all motors  Set(motor1, (1450-motor1Zero))  Set(motor2, (1450-motor2Zero))  Set(motor3, (1475-motor3Zero))  Set(motor4, (1475-motor4Zero))PUB Forward ( speed )  Set(motor1, +speed)  Set(motor2, +speed)  Set(motor3, +speed)  Set(motor4, +speed)PUB Reverse ( speed )  'Motors.Set(motor1, 1800)  'Motors.Set(motor2, 2050)  'Motors.Set(motor3, 2150)  'Motors.Set(motor4, 2350)  Set(motor1, +speed)  Set(motor2, +speed)  Set(motor3, +400)  Set(motor4, +450)PUB TurnLeft ( speed )           'motor 1 and 3 left wheels move slower'  Set(motor1, +160)  Set(motor2, +speed)  Set(motor3, +160)  Set(motor4, +speed)PUB TurnRight ( speed )         'motor 2 and 4 right wheels move slower'  Set(motor1, +speed)  Set(motor2, +180)  Set(motor3, +speed)  Set(motor4, +180)PUB ReverseLeft ( speed )      'motor 1 and 3 left wheels slower'  Set(motor1, +250)  Set(motor2, +400)  Set(motor3, +300)  Set(motor4, +430)PUB ReverseRight ( speed )          'motor 2 and 4 right wheels reverse slower than the left'  Set(motor1, +speed)  Set(motor2, +275)  Set(motor3, +speed)  Set(motor4, +350)PRI Pause(ms) | t  t := cnt - 1088  repeat (ms #> 0)    waitcnt(t += _MS_001)  return